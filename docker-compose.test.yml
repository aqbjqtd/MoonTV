version: '3.8'

services:
  moontv-test:
    build:
      context: .
      dockerfile: Dockerfile
      target: production-runner
      cache_from:
        - moontv-base-deps:latest
        - moontv-build-prep:latest
      args:
        - NODE_ENV=production
        - DOCKER_ENV=true

    image: moontv:test
    container_name: moontv-test

    ports:
      - '3000:3000'

    environment:
      - NODE_ENV=production
      - DOCKER_ENV=true
      - HOSTNAME=0.0.0.0
      - PORT=3000
      - NEXT_TELEMETRY_DISABLED=1
      # 基础配置
      - PASSWORD=test123456
      - NEXT_PUBLIC_SITE_NAME=MoonTV-Test
      - NEXT_PUBLIC_STORAGE_TYPE=localstorage
      - NEXT_PUBLIC_SEARCH_MAX_PAGE=5

    volumes:
      # 持久化配置文件（用于测试不同配置）
      - ./config.test.json:/app/config.json:ro
      # 测试数据目录
      - test_data:/app/data

    networks:
      - moontv-test-network

    restart: unless-stopped

    healthcheck:
      test:
        [
          'CMD',
          'node',
          '--eval',
          "require('http').get('http://localhost:3000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).on('error', () => process.exit(1))",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

    labels:
      - 'traefik.enable=false'
      - 'app=moontv-test'
      - 'env=test'
      - 'version=standard-three-stage'

networks:
  moontv-test-network:
    driver: bridge
    labels:
      - 'app=moontv-test'

volumes:
  test_data:
    driver: local
    labels:
      - 'app=moontv-test'
